<ci:MyWindow x:Class="ClassIsland.Views.AuthorizeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClassIsland.Views"
        xmlns:ci="http://classisland.tech/schemas/xaml/core"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:registry="clr-namespace:ClassIsland.Core.Services.Registry;assembly=ClassIsland.Core"
        xmlns:controls="clr-namespace:ClassIsland.Controls"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        Height="500" Width="500"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance local:AuthorizeWindow}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"   
        SizeToContent="Height"
        MinHeight="300"
        MaxHeight="700"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource HarmonyOsSans}"
        Title="ClassIsland">
    <ci:MyWindow.CommandBindings>
        <CommandBinding Command="{x:Static ci:AuthorizeProviderControlBase.CompleteAuthorizeCommand}" Executed="CommandBindingCompleteAuthorize_OnExecuted"></CommandBinding>
    </ci:MyWindow.CommandBindings>
    <Grid Margin="16">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0 0 0 12"
                    Visibility="{Binding ViewModel.IsEditingMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <TextBlock Text="验证您的身份" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
            <TextBlock Text="要继续操作，请通过下列的方式验证您的身份。" TextWrapping="Wrap" Margin="0 4 0 0"/>
        </StackPanel>
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0 0 0 12"
                    Visibility="{Binding ViewModel.IsEditingMode, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="编辑认证项目" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
            <TextBlock Text="编辑进行此操作需要的认证方式。" TextWrapping="Wrap" Margin="0 4 0 0"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal"
                    Visibility="{Binding ViewModel.IsEditingMode, RelativeSource={RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                    Margin="0 0 0 8">
            <Button Style="{StaticResource MaterialDesignFlatButton}"
                    Click="ButtonAddAuthorizeMethod_OnClick">
                <Button.Content>
                    <ci:IconText Kind="Add" Text="添加认证方式"></ci:IconText>
                </Button.Content>
            </Button>
            <ComboBox ItemsSource="{x:Static registry:AuthorizeProviderRegistryService.RegisteredAuthorizeProviders}" MinWidth="100"
                      SelectedItem="{Binding ViewModel.SelectedAuthorizeProviderInfo}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <ci:IconText Kind="{Binding IconKind}" Text="{Binding Name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <ListBox Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2"
                 ItemsSource="{Binding ViewModel.Credential.Items}"
                 HorizontalContentAlignment="Stretch"
                 Margin="0 0 0 0"
                 materialDesign:RippleAssist.IsDisabled="True"
                 SelectedItem="{Binding ViewModel.SelectedCredentialItem}"
                 dd:DragDrop.IsDragSource="{Binding ViewModel.IsEditingMode}"
                 dd:DragDrop.IsDropTarget="{Binding ViewModel.IsEditingMode}"
                 dd:DragDrop.DropTargetAdornerBrush="{DynamicResource PrimaryHueMidBrush}">
            <dd:DragDrop.EffectMoveAdornerTemplate>
                <DataTemplate>
                    <materialDesign:ColorZone Mode="PrimaryMid" Height="24"
                                              CornerRadius="12">
                        <ci:IconText Kind="ArrowUpDown" Text="调整顺序"
                                            Margin="4 0"
                                            IconMargin="2"
                                            TextElement.FontWeight="Medium"
                                            VerticalAlignment="Center"/>
                    </materialDesign:ColorZone>
                </DataTemplate>
            </dd:DragDrop.EffectMoveAdornerTemplate>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="4" materialDesign:RippleAssist.IsDisabled="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <materialDesign:PackIcon Grid.Column="0" Grid.Row="0"
                                                 Foreground="{DynamicResource PrimaryHueMidBrush}"
                                                 Kind="{Binding ProviderInfo.IconKind}"
                                                 VerticalAlignment="Center"
                                                 HorizontalAlignment="Center"
                                                 Margin="0 0 8 0"
                                                 Height="20"
                                                 Width="20"/>
                        
                        <TextBlock Grid.Column="1" Grid.Row="0"
                                   VerticalAlignment="Center"
                                   FontSize="16">
                            <Run Text="用"/><Run Text="{Binding ProviderInfo.Name, Mode=OneWay}"/><Run Text="继续"/>
                        </TextBlock>
                        <StackPanel Grid.Column="1" Grid.Row="0" 
                                    VerticalAlignment="Center"
                                    Margin="0 -8"
                                    HorizontalAlignment="Right">
                            <StackPanel.Visibility>
                                <MultiBinding Converter="{StaticResource BooleanAndToVisibilityMultiConverter}">
                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource FindAncestor, AncestorType=ListBoxItem}"/>
                                    <Binding Path="ViewModel.IsEditingMode" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}"/>
                                </MultiBinding>
                            </StackPanel.Visibility>
                            <Button Style="{StaticResource MaterialDesignToolForegroundButton}"
                                    ToolTip="删除"
                                    Content="{materialDesign:PackIcon Delete}"
                                    Foreground="IndianRed"
                                    Click="ButtonRemoveSelectedAuthProvider_OnClick"/>
                        </StackPanel>

                        <controls:AuthorizeProviderPresenter 
                            Grid.Column="1" Grid.Row="1"
                            IsEditingMode="{Binding ViewModel.IsEditingMode, RelativeSource={RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}, Mode=OneWay}"
                            CredentialItem="{Binding Mode=OneWay}"
                            Visibility="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignPaperButton}"
                IsCancel="True">
            <ci:IconText Kind="Cancel" Text="取消"/>
        </Button>
        <Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right"
                Click="ButtonOk_OnClick"
                Visibility="{Binding ViewModel.IsEditingMode, RelativeSource={RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ci:IconText Kind="Check" Text="确定"/>
        </Button>
    </Grid>
</ci:MyWindow>
