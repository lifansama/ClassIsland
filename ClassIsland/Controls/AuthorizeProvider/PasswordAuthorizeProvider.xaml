<ci:AuthorizeProviderControlBase x:TypeArguments="authorizeProviderSettings:PasswordAuthorizeSettings"
                                 x:Class="ClassIsland.Controls.AuthorizeProvider.PasswordAuthorizeProvider"
                                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                                 xmlns:local="clr-namespace:ClassIsland.Controls.AuthorizeProvider"
                                 xmlns:ci="http://classisland.tech/schemas/xaml/core"
                                 xmlns:authorizeProviderSettings="clr-namespace:ClassIsland.Models.AuthorizeProviderSettings"
                                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                                 mc:Ignorable="d" 
                                 d:DesignHeight="450" d:DesignWidth="800"
                                 Loaded="PasswordAuthorizeProvider_OnLoaded">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <PasswordBox Grid.Row="0" Grid.Column="0" x:Name="PasswordBox"
                     PasswordChanged="PasswordBox_OnPasswordChanged"
                     materialDesign:HintAssist.Hint="密码"
                     KeyDown="PasswordBox_OnKeyDown"
                     Visibility="{Binding ProtectPassword, RelativeSource={RelativeSource FindAncestor, AncestorType=local:PasswordAuthorizeProvider}, Converter={StaticResource InverseBoolToVisConverter}}"/>
        <StackPanel Grid.Row="0" Grid.Column="0"
                    Margin="0 4 0 0"
                    Visibility="{Binding ProtectPassword, RelativeSource={RelativeSource FindAncestor, AncestorType=local:PasswordAuthorizeProvider}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="密码已设定。"/>
            <Button Style="{StaticResource MaterialDesignFlatButton}"
                    Margin="0 4 0 0"
                    HorizontalAlignment="Left"
                    Click="ButtonChangePassword_OnClick">
                <ci:IconText Kind="EditOutline" Text="更改密码" />
            </Button>
        </StackPanel>
        <Button Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"
                Style="{StaticResource MaterialDesignToolForegroundButton}"
                VerticalContentAlignment="Center"
                Content="{materialDesign:PackIcon ArrowRight}"
                ToolTip="确定"
                Visibility="{Binding IsEditingMode, RelativeSource={RelativeSource FindAncestor, AncestorType=local:PasswordAuthorizeProvider}, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                Click="ButtonCheckPassword_OnClick"/>

        <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                   Text="密码不正确。" Foreground="IndianRed"
                   Visibility="{Binding AuthorizeFailed, RelativeSource={RelativeSource FindAncestor, AncestorType=local:PasswordAuthorizeProvider}, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Margin="0 4 0 0"/>
    </Grid>
</ci:AuthorizeProviderControlBase>
